AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  acme-cert-updater

  update the certificate using ACME and Route 53

Metadata:
  AWS::ServerlessRepo::Application:
    Name: acme-cert-updater
    Description: update the certificate using ACME and Route 53
    Author: ICHINOSE Shogo
    SpdxLicenseId: MIT
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    Labels: ["acme", "letsencrypt"]
    HomePageUrl: https://github.com/shogo82148/acme-cert-updater
    SemanticVersion: 1.10.0
    SourceCodeUrl: https://github.com/shogo82148/acme-cert-updater

Parameters:
  Domains:
    Type: String
    Description: Comma separated list of domains to update the certificates
  CertName:
    Type: String
    Description: the S3 key of certificate. the default value is the first domain name.
    Default: ""
  Email:
    Type: String
    Description: Email address
  BucketName:
    Type: String
    Description: S3 bucket name for saving the certificates
  Prefix:
    Type: String
    Description: Prefix of objects on S3 bucket
    Default: ""
  Environment:
    Type: String
    AllowedValues: ["production", "staging"]
    Default: "production"
    Description: execution environment
  AcmeServer:
    Type: String
    Default: https://acme-v02.api.letsencrypt.org/directory
    Description: url for acme server
  HostedZone:
    Type: AWS::Route53::HostedZone::Id
    Description: Amazon Route 53 Hosted Zone ID
  Notification:
    Type: String
    Default: ""
    Description: The Amazon SNS topic Amazon Resource Name (ARN) to which the updater reports events.
  LogLevel:
    Type: String
    Default: ERROR
    AllowedValues: [DEBUG, INFO, WARN, WARNING, ERROR, CRITICAL]

Conditions:
  # NOTE: check whether Notification is an ARN.
  # for backward compatibility, we should accept a topic name.
  #
  # If Notification is an ARN, e.g. "arn:aws:sns:us-east-1:123456789012:my-topic":
  #   `!Join [ "", !Split [ "arn:", !Ref Notification ] ]` is "aws:sns:us-east-1:123456789012:my-topic"
  #   As a result, IsNotificationArn will be **false** because "arn:aws:sns:us-east-1:123456789012:my-topic" != "aws:sns:us-east-1:123456789012:my-topic"
  #
  # If Notification is a topic name, e.g. "my-topic":
  #   `!Join [ "", !Split [ "arn:", !Ref Notification ] ]` is "my-topic"
  #   As a result, IsNotificationArn will be **false** because "my-topic" == "my-topic"
  #
  # it works because topic names can't contain ":"
  # ref. https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-topic.html#cfn-sns-topic-topicname
  # > Topic names must include only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens,
  # > and must be between 1 and 256 characters long.
  IsNotificationArn: !Not
    - !Equals
      - !Join [ "", !Split [ "arn:", !Ref Notification ] ] # remove "arn:" in Notification
      - !Ref Notification

  HasNotification: !Not [!Equals [!Ref Notification, ""]]

Resources:
  AcmeCertUpdater:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: updater/
      Handler: app.lambda_handler
      Runtime: python3.9
      Environment:
        Variables:
          UPDATER_EMAIL: !Ref Email
          UPDATER_BUCKET_NAME: !Ref BucketName
          UPDATER_PREFIX: !Ref Prefix
          UPDATER_ENVIRONMENT: !Ref Environment
          UPDATER_ACME_SERVER: !Ref AcmeServer
          UPDATER_NOTIFICATION: !If
            - IsNotificationArn
            - !Ref Notification
            - !If
              - HasNotification
              - !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${Notification}
              - ""
          UPDATER_LOG_LEVEL: !Ref LogLevel
      Timeout: 900
      Events:
        Update:
          Type: Schedule
          Properties:
            Schedule: "rate(12 hours)"
            Input: !Sub '{"domains":"${Domains}","cert_name":"${CertName}"}'
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref BucketName
        - SNSPublishMessagePolicy:
            TopicName: !Ref Notification
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - "route53:ListHostedZones"
                - "route53:GetChange"
              Resource:
                - "*"
            - Effect: Allow
              Action:
                - route53:ChangeResourceRecordSets
              Resource:
                - !Sub arn:aws:route53:::hostedzone/${HostedZone}

  Certificate:
    Type: Custom::Certificate
    Properties:
      ServiceToken: !GetAtt AcmeCertUpdater.Arn
      domains: !Ref Domains
      cert_name: !Ref CertName

Outputs:
  Arn:
    Description: the arn of updater AWS Lambda function
    Value: !GetAtt AcmeCertUpdater.Arn
